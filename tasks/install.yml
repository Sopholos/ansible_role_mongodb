---
- name: install | gnupg
  apt:
    name: gnupg
    state: present
- name: install | repo gpg key
  apt_key:
    url: https://www.mongodb.org/static/pgp/server-{{ mongo_version }}.asc
  when: mongo_repo

- name: install | put apt for mongo
  shell: |
    echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu {{ ubuntu_version }}/mongodb-org/{{ mongo_version }} multiverse" > /etc/apt/sources.list.d/mongodb-org-{{ mongo_version }}.list
  when: mongo_repo

- name: install | group mongodb
  group:
    name: mongodb
    system: true

- name: install | user mongodb
  user:
    name: mongodb
    system: true
    group: mongodb
    comment: 'MongoDB Server'
    home: "{{ mongo_storage.dbPath }}"
    create_home: false
    shell: /sbin/nologin
  register: set_user

- name: install | dependencies
  apt:
    update_cache: yes
    name:
      - python3-dev
      - python3-pip
      - libc6

- name: install | mongo edition {{ mongo_edition }}
  apt:
    update_cache: yes
    name: mongodb-{{ mongo_edition }}

- name: install | mongod.service PIDFile and RuntimeDirectory
  ini_file:
    path: /usr/lib/systemd/system/mongod.service
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    state: present
    no_extra_spaces: yes
  loop:
    - { section: Service, option: PIDFile, value: "{{ mongo_processmanagement.pidFilePath }}" }
    - { section: Service, option: RuntimeDirectory, value: "mongodb" }
    - { section: Service, option: RuntimeDirectoryMode, value: "0755" }

- name: install | reload daemons, because a service file changed
  systemd:
    daemon_reload: true

- name: install | data folder
  file:
    state: directory
    path: "{{ mongo_storage.dbPath }}"
    mode: u=rwx,g=rw,o=r
    owner: mongodb
    group: mongodb

- name: install | journal folder
  file:
    state: directory
    path: "{{ mongo_storage.dbPath }}/journal"
    mode: u=rwx,g=rw,o=r
    owner: mongodb
    group: mongodb

- name: install | logs folder
  file:
    path: "{{ mongo_systemlog.path | dirname }}"
    mode: u=rwx,g=rw,o=r
    group: mongodb
    owner: mongodb

- name: install | remove default data folder when set differently
  file:
    state: absent
    path: /var/lib/mongodb
  when: mongo_storage.dbPath != '/var/lib/mongodb'

- name: install | remove log folder when set differently
  file:
    state: absent
    path: /var/log/mongodb
  when: >-
    '/var/log/mongodb' not in mongo_systemlog.path or
    mongo_systemlog.destination != 'file'

- block:

    - name: install | ensure log folder exists
      file:
        path: "{{ mongo_systemlog.path | dirname }}"
        state: directory        
        mode: u=rwx,g=rw,o=r
        recurse: yes
        owner: mongodb
        group: mongodb

    - name: install | stat if log file exist
      stat:
        path: "{{ mongo_systemlog.path }}"
      register: mongo_log_check

    - name: install | ensure log files exist
      copy:
        content: ""
        dest: "{{ mongo_systemlog.path }}"
        force: true
        mode: u=rwx,g=rw,o=r
        recurse: yes
        owner: mongodb
        group: mongodb
      when: not mongo_log_check.stat.exists

  when: >-
    '/var/log/mongodb' not in mongo_systemlog.path and
    mongo_systemlog.destination == 'file'

- name: install | pymongo {{ mongo_pymongo_version }}
  pip:
    name: pymongo
    executable: pip3
    version: "{{ mongo_pymongo_version }}"
